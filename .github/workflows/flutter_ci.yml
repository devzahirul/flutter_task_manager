name: Flutter CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        channel: [stable]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Flutter ${{ matrix.channel }}
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ matrix.channel }}
          cache: true

      - name: Cache Pub (packages)
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Flutter pub get (root)
        run: flutter pub get

      - name: Flutter pub get (packages)
        run: |
          for dir in packages/domain packages/data packages/application; do
            echo "Fetching in $dir"
            (cd "$dir" && flutter pub get)
          done

      - name: Run tests (packages)
        if: github.event_name != 'push' || github.ref != 'refs/heads/main'
        run: |
          set -e
          (cd packages/domain && flutter test --no-pub)
          (cd packages/data && flutter test --no-pub)
          (cd packages/application && flutter test --no-pub)

      - name: Run tests with coverage (packages)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          set -e
          (cd packages/domain && flutter test --coverage)
          (cd packages/data && flutter test --coverage)
          (cd packages/application && flutter test --coverage)

      - name: Run tests (app)
        if: github.event_name != 'push' || github.ref != 'refs/heads/main'
        run: flutter test --no-pub

      - name: Run tests with coverage (app)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: flutter test --coverage

      - name: Install lcov (for merging)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: sudo apt-get update && sudo apt-get install -y lcov

      - name: Merge coverage into single report
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          mkdir -p coverage
          lcov \
            -a coverage/lcov.info \
            -a packages/domain/coverage/lcov.info \
            -a packages/data/coverage/lcov.info \
            -a packages/application/coverage/lcov.info \
            -o coverage/combined.info

      - name: Upload coverage artifacts
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-artifacts-${{ matrix.channel }}
          path: |
            coverage/lcov.info
            coverage/combined.info
            packages/domain/coverage/lcov.info
            packages/data/coverage/lcov.info
            packages/application/coverage/lcov.info

      - name: Upload to Codecov (optional, stable only)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && matrix.channel == 'stable'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ env.CODECOV_TOKEN }}
          files: coverage/combined.info
          fail_ci_if_error: false

      - name: Analyze (packages + app lib)
        run: |
          flutter analyze lib \
            packages/domain/lib \
            packages/data/lib \
            packages/application/lib

      - name: Build web (release)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: flutter build web --release

      - name: Upload web build artifact
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: web-build-${{ matrix.channel }}
          path: build/web

  analyze-tests:
    name: Analyze tests (non-blocking)
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Flutter stable
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Cache Pub (packages)
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Flutter pub get (root)
        run: flutter pub get

      - name: Flutter pub get (packages)
        run: |
          for dir in packages/domain packages/data packages/application; do
            echo "Fetching in $dir"
            (cd "$dir" && flutter pub get)
          done

      - name: Analyze tests
        run: |
          flutter analyze test \
            packages/domain/test \
            packages/data/test \
            packages/application/test
